{"version":3,"file":"static/js/390.b8ba69fc.chunk.js","mappings":"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","sources":["page/admin/ProductListHistory.js","utils/uFormatter.js"],"sourcesContent":["import { useEffect, useState } from 'react';\r\nimport { Icon } from '@iconify/react';\r\nimport toast from 'react-hot-toast';\r\nimport { IconButton } from '@mui/material';\r\nimport { ArrowBack, ArrowForward } from '@mui/icons-material';\r\nimport AlertModal from \"../../component/core/AlertModal\";\r\nimport Page from \"../../component/Page\";\r\nimport SearchInput from '../../component/core/SearchInput';\r\n\r\nimport { API_ADMIN, API_CLIENT, API_WAREHOUSE, ASSETS_URL, SEND_GET_REQUEST, SEND_POST_REQUEST } from '../../utils/API';\r\nimport { fPrice, fShortDate, fSimpleDate } from '../../utils/uFormatter';\r\nimport LoadingScreen from '../../component/custom/LoadingScreen';\r\n\r\nconst PER_COUNT = 10;\r\nexport default function ProductListHistory() {\r\n    const [filtered, setFiltered] = useState([]);\r\n    const [products, setProducts] = useState([]);\r\n    const [warehouse, setWarehouse] = useState({});\r\n    const [searchFilter, setSearchFilter] = useState(\"\");\r\n    \r\n    const [currentPage, setCurrentPage] = useState(0);\r\n    \r\n    const [pageFiltered, setPageFiltered] = useState([]);\r\n     \r\n    const handleChangeSearch = (value) => {\r\n        setSearchFilter(value);\r\n    }\r\n    const handleNextPage = () => {\r\n        let current = currentPage;\r\n        if (current < (Math.ceil(filtered.length / PER_COUNT) - 1)) {\r\n            current++;\r\n\r\n            setPageFiltered(filtered.slice(current * PER_COUNT, Math.min((current + 1) * PER_COUNT, filtered.length)));\r\n            setCurrentPage(current);\r\n        }\r\n    }\r\n    const handlePrevPage = () => {\r\n        let current = currentPage;\r\n        if (current >= 1) {\r\n            current--;\r\n            setPageFiltered(filtered.slice(current * PER_COUNT, Math.min((current + 1) * PER_COUNT, filtered.length)));\r\n            setCurrentPage(current);\r\n        }\r\n    }\r\n    const applyFilter = () => {\r\n     \r\n        const filter = (products.filter((product) => ((product.barcode.includes(searchFilter) || product.operation.includes(searchFilter) || product.value.includes(searchFilter)))));\r\n\r\n        setFiltered(filter);\r\n\r\n        setPageFiltered(filter.slice(currentPage * PER_COUNT, Math.min((currentPage + 1) * PER_COUNT, filter.length)));\r\n    }\r\n    const loadList = () => {\r\n        if (warehouse && warehouse._id)\r\n            SEND_GET_REQUEST(`${API_ADMIN.getProductsHistory}${warehouse._id}`).then(res => {\r\n\r\n                if (res.status === 200 && res.data && res.data.data) {\r\n                    const data = res.data.data;\r\n                    setProducts(data)\r\n\r\n                }\r\n            })\r\n    }\r\n    useEffect(() => {\r\n        SEND_GET_REQUEST(API_WAREHOUSE.getSelf).then(res => {\r\n            if (res.status === 200) {\r\n                setWarehouse(res.data.warehouse);\r\n            }\r\n            else {\r\n                toast.error(\"Please select your warehouse\");\r\n            }\r\n        })\r\n\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        applyFilter();\r\n    }, [products,  searchFilter])\r\n    useEffect(() => {\r\n        if (warehouse && warehouse._id)\r\n            loadList();\r\n    }, [warehouse])\r\n    return (\r\n        <Page title='Product Management' className=\"flex w-full flex-col gap-4\">\r\n            <div className='flex w-full justify-between p-2'>\r\n                <SearchInput handleChangeSearch={handleChangeSearch} />\r\n            </div>\r\n            <div className='overflow-x-auto w-full'>\r\n                <table className='table w-full table-compact'>\r\n                    <thead>\r\n                        <tr>\r\n                            <th>\r\n                                <label>\r\n                                    {/* <input type=\"checkbox\" className=\"checkbox rounded-md checkbox-sm\" onChange={handleSelectAll} /> */}\r\n                                </label>\r\n                            </th>\r\n                            <th>Barcode</th>\r\n                            <th>Mobile</th>\r\n                            <th>Operation</th>\r\n                            <th>Result</th>\r\n                            <th>Amount</th>\r\n                            <th>Value</th>\r\n                            <th>Time</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {pageFiltered.length === 0 && <tr><td colSpan={8}><div className='text-lg text-center p-4'>No data display</div></td></tr>}\r\n                        {pageFiltered && pageFiltered.map((product, index) => (\r\n                            <tr key={index}>\r\n                                <td>\r\n                                    <label>\r\n                                        {index+1}\r\n                                    </label>\r\n                                </td>\r\n                                <td>\r\n                                    {product.barcode}\r\n                                </td>\r\n                                <td>\r\n                                    {product.mobile}\r\n                                </td>\r\n                                <td>\r\n                                    {product.operation}\r\n                                </td>\r\n                                <td>\r\n                                    <label className = {`badge ${product.result ==='success'?\"badge-info\":\"badge-warning\"}`}> {product.result}</label>\r\n                                   \r\n                                </td>\r\n                                <td>\r\n                                    {product.amount}\r\n                                </td>\r\n                                <td>\r\n                                    {product.value}\r\n                                </td>\r\n                                <td>\r\n                                    {fShortDate(product.timestamp)}\r\n                                </td>\r\n                            </tr>\r\n                        ))\r\n\r\n                        }\r\n                    </tbody>\r\n                </table>\r\n\r\n            </div>\r\n            <div className={\"flex justify-between w-full items-center mb-4 p-1  rounded-b-lg bg-stone-200 -mt-3\"}>\r\n                <div className='flex items-center gap-2'>\r\n                    \r\n                </div>\r\n                <div className='flex items-center  '>\r\n                    <label >{(currentPage + 1)} of {Math.ceil(filtered.length / PER_COUNT)}</label>\r\n                    <IconButton onClick={handlePrevPage} disabled={(currentPage === 0)} ><ArrowBack></ArrowBack></IconButton>\r\n                    <IconButton onClick={handleNextPage} disabled={(currentPage === (Math.ceil(filtered.length / PER_COUNT) - 1))} ><ArrowForward></ArrowForward></IconButton>\r\n                </div>\r\n\r\n            </div>\r\n        </Page>\r\n    )\r\n}","import numeral from 'numeral';\r\n\r\nexport function fNumber(number) {\r\n    return numeral(number).format(\"0,0.00a\").replace(\".00\", '');\r\n}\r\nexport function fPrice(number, currency) {\r\n    return `${fNumber(number)} ${currency}`;\r\n}\r\nexport function fRemain(current, period) {\r\n    const rm = period - current;\r\n    const d = Math.floor(rm / 3600 / 24 / 1000);\r\n    const h = Math.floor((rm - d * 3600 * 24 * 1000) / 3600 / 1000);\r\n    const m = Math.floor((rm - d * 3600 * 24 * 1000 - h * 3600 * 1000) / 60 / 1000);\r\n    const value = ((d > 0 ? (`${d}d `) : '') + (h > 0 ? (`${h}h `) : '') + (m > 0 ? (`${m}m `) : ''));\r\n    return {\r\n        text:`${value}`,\r\n        isRemain:rm>0,\r\n\r\n    }\r\n    \r\n}\r\nexport function fShortDate(number){\r\n    try{\r\n        const date = new Date(number).toUTCString();\r\n        return date.substring(0,date.length-3)\r\n    }\r\n    catch(err){\r\n        return \"\";\r\n    }\r\n}\r\nexport function fSimpleDate(number){\r\n    try{\r\n\r\n        const date = new Date(number).toUTCString();\r\n        return date.substring(0,date.length-12)\r\n    }\r\n    catch(err){\r\n        return \"\";\r\n    }\r\n}"],"names":["PER_COUNT","ProductListHistory","useState","filtered","setFiltered","products","setProducts","warehouse","setWarehouse","searchFilter","setSearchFilter","currentPage","setCurrentPage","pageFiltered","setPageFiltered","useEffect","SEND_GET_REQUEST","API_WAREHOUSE","then","res","status","data","toast","filter","product","barcode","includes","operation","value","slice","Math","min","length","applyFilter","_id","API_ADMIN","title","className","handleChangeSearch","colSpan","map","index","mobile","result","amount","fShortDate","timestamp","ceil","onClick","current","disabled","fNumber","number","numeral","format","replace","fPrice","currency","date","Date","toUTCString","substring","err","fSimpleDate"],"sourceRoot":""}