{"version":3,"file":"static/js/519.f39fab5c.chunk.js","mappings":"uQAYe,SAASA,IACtB,IAAMC,GAAWC,EAAAA,EAAAA,MACTC,GAAcC,EAAAA,EAAAA,KAAdD,UAWR,GAMIE,EAAAA,EAAAA,IAAQ,CAAEC,KAAM,SAAUC,cAfR,CACpBC,MAAO,GACPC,MAAO,GACPC,MAAO,GACPC,MAAO,GACPC,MAAO,GACPC,MAAO,MAIPC,EADF,EACEA,MACAC,EAFF,EAEEA,QACAC,EAHF,EAGEA,SACAC,EAJF,EAIEA,aAJF,IAKEC,UAAaC,EALf,EAKeA,aAAcC,EAL7B,EAK6BA,QAGvBC,EAASP,IAETQ,GAAuBC,EAAAA,EAAAA,cAAY,SAACC,GAAW,IAAD,EAC9CC,GAAY,OAALD,QAAK,IAALA,GAAA,UAAAA,EAAOE,qBAAP,eAAsBC,QAAQ,UAAW,GAEpDF,EAAOA,EAAKG,MAAM,IAElB,GAAGC,QAAQC,KAAKC,SAASC,iBAAiB,gBAAgB,SAACC,EAAMC,GAC/DD,EAAKE,MAAQV,EAAKS,GAClB,IAAME,EAAU,cAAUF,EAAQ,GAClClB,EAASoB,EAAYX,EAAKS,SAE5B,CAAClB,KAEHqB,EAAAA,EAAAA,YAAU,WACRN,SAASO,iBAAiB,QAAShB,KAClC,CAACA,IAEJ,IAAMiB,EAAQ,mCAAG,WAAOd,GAAP,uFACMtB,EAAUqC,OAAOnB,OAAOI,GAAMgB,KAAK,KADzC,QACTC,EADS,QAELC,QACR1C,EAAS,kBAAkB,CAAC2C,SAAQ,IAGpCC,EAAAA,GAAAA,MAAYH,EAAOI,KANN,2CAAH,sDA6Bd,OACE,SAAC,IAAD,CAAMC,MAAQ,aAAd,UACA,iBAAKC,UAAU,uCAAf,WACE,cAAGA,UAAU,0BAAb,8BAGA,cAAGA,UAAU,OAAb,0EAGA,kBAAMT,SAAUtB,EAAasB,GAA7B,WACE,gBAAKS,UAAU,iCAAf,SACGR,OAAOS,KAAK5B,GAAQ6B,KAAI,SAACC,EAAMjB,GAAP,OACvB,SAAC,KAAD,CAEEiB,KAAI,cAASjB,EAAQ,GACrBnB,QAASA,EACTqC,OAAQ,gBAAGC,EAAH,EAAGA,MAAH,OACN,kCACEL,UAAS,sOAMTM,UAAW,EAAGC,UAAQ,GAClBF,GARN,IASEG,UAAqB,IAAVtB,EACXuB,YAAY,IACZC,SAAU,SAAClC,GAAD,OA7CQ,SAACA,EAAOmC,GACxC,MAAmCnC,EAAMoC,OAAjCN,EAAR,EAAQA,UAAWnB,EAAnB,EAAmBA,MACbC,EADN,EAA0Be,KACFP,QAAQ,OAAQ,IAClCiB,EAAgBC,OAAO1B,GAC7B,GAAID,EAAM4B,QAAUT,GACdO,EAAgB,EAAG,CACrB,IAAMG,EAAYjC,SAASkC,cAAT,yBAAyCJ,EAAgB,EAAzD,MAEA,OAAdG,GACFA,EAAUE,QAKhBP,EAAanC,GA+BsB2C,CAA0B3C,EAAO6B,EAAMK,gBAf3DP,SAqBX,mBACEH,UAAS,+DAEL7B,GAAgB,WAFX,2BAGJC,GAAW,YAHP,KAKTgD,KAAK,SANP,sBAYA,gBAAKpB,UAAY,UAAjB,qDACA,gBAAKA,UAAU,0CAA0CqB,QAAS,aAAlE","sources":["page/auth/VerifyOTP.js"],"sourcesContent":["import { useNavigate } from 'react-router-dom';\r\nimport { useEffect, useCallback } from 'react';\r\n// form\r\nimport { useForm, Controller } from 'react-hook-form';\r\nimport toast from 'react-hot-toast';\r\n// hooks\r\nimport useAuth from '../../hook/useAuth';\r\nimport Page from '../../component/Page';\r\n\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function VerifyOTP() {\r\n  const navigate = useNavigate();\r\n  const { otpVerify } = useAuth();\r\n  \r\n  const defaultValues = {\r\n    code1: '',\r\n    code2: '',\r\n    code3: '',\r\n    code4: '',\r\n    code5: '',\r\n    code6: '',\r\n  };\r\n\r\n  const {\r\n    watch,\r\n    control,\r\n    setValue,\r\n    handleSubmit,\r\n    formState: { isSubmitting, isValid },\r\n  } = useForm({ mode: 'onBlur', defaultValues });\r\n\r\n  const values = watch();\r\n\r\n  const handlePasteClipboard = useCallback((event) => {\r\n    let data = event?.clipboardData?.getData('Text') || '';\r\n\r\n    data = data.split('');\r\n\r\n    [].forEach.call(document.querySelectorAll('.field-code'), (node, index) => {\r\n      node.value = data[index];\r\n      const fieldIndex = `code${index + 1}`;\r\n      setValue(fieldIndex, data[index]);\r\n    });\r\n  },[setValue]);\r\n\r\n  useEffect(() => {\r\n    document.addEventListener('paste', handlePasteClipboard);\r\n  }, [handlePasteClipboard]);\r\n\r\n  const onSubmit = async (data) => {\r\n    const result = await otpVerify(Object.values(data).join(''));\r\n    if(result.success){\r\n      navigate('/client/profile',{replace:true})\r\n    }\r\n    else{\r\n      toast.error(result.err);\r\n    } \r\n  };\r\n\r\n\r\n\r\n  const handleChangeWithNextField = (event, handleChange) => {\r\n    const { maxLength, value, name } = event.target;\r\n    const fieldIndex = name.replace('code', '');\r\n    const fieldIntIndex = Number(fieldIndex);\r\n    if (value.length >= maxLength) {\r\n      if (fieldIntIndex < 6) {\r\n        const nextfield = document.querySelector(`input[name=code${fieldIntIndex + 1}]`);\r\n\r\n        if (nextfield !== null) {\r\n          nextfield.focus();\r\n        }\r\n      }\r\n    }\r\n\r\n    handleChange(event);\r\n  };\r\n\r\n  return (\r\n    <Page title = \"verify-otp\">\r\n    <div className='container max-w-sm text-center py-10'>\r\n      <p className='text-3xl font-bold mb-5'>\r\n        Verify sms code\r\n      </p>\r\n      <p className='mb-5'>\r\n        Please enter cerification code we sent to your phone number\r\n      </p>\r\n      <form onSubmit={handleSubmit(onSubmit)}>\r\n        <div className='flex gap-3 justify-center mb-5' >\r\n          {Object.keys(values).map((name, index) => (\r\n            <Controller\r\n              key={name}\r\n              name={`code${index + 1}`}\r\n              control={control}\r\n              render={({ field }) => (\r\n                <input\r\n                  className={`\r\n                    field-code \r\n                    input w-9 h-11 sm:w-16 sm:h-20 bg-gray-500/10 \r\n                    focus:border-gray-300 border-gray-200\r\n                    text-3xl text-center  p-0\r\n                  `}\r\n                  maxLength={1} required\r\n                  {...field}\r\n                  autoFocus={index === 0}\r\n                  placeholder=\"-\"\r\n                  onChange={(event) => handleChangeWithNextField(event, field.onChange)}\r\n                />\r\n              )}\r\n            />\r\n          ))}\r\n        </div>\r\n        <button\r\n          className={\r\n            `btn gap-2 btn-info w-4/5 uppercase mb-5\r\n            ${isSubmitting && ' loading'} \r\n            ${!isValid && ' disabled'} `\r\n          }\r\n          type=\"submit\"\r\n        >\r\n          Next\r\n        </button>\r\n      </form>\r\n    \r\n        <div className = \"text-lg\">Haven't got your OTP number yet?  &nbsp;</div>\r\n        <div className='btn btn-link no-underline text-blue-500' onClick={() => { }}>\r\n          Resend code\r\n        </div>\r\n    </div>\r\n    </Page>\r\n  );\r\n}\r\n"],"names":["VerifyOTP","navigate","useNavigate","otpVerify","useAuth","useForm","mode","defaultValues","code1","code2","code3","code4","code5","code6","watch","control","setValue","handleSubmit","formState","isSubmitting","isValid","values","handlePasteClipboard","useCallback","event","data","clipboardData","getData","split","forEach","call","document","querySelectorAll","node","index","value","fieldIndex","useEffect","addEventListener","onSubmit","Object","join","result","success","replace","toast","err","title","className","keys","map","name","render","field","maxLength","required","autoFocus","placeholder","onChange","handleChange","target","fieldIntIndex","Number","length","nextfield","querySelector","focus","handleChangeWithNextField","type","onClick"],"sourceRoot":""}