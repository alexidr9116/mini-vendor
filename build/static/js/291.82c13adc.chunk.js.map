{"version":3,"file":"static/js/291.82c13adc.chunk.js","mappings":"6PASe,SAASA,IACpB,IAAQC,GAASC,EAAAA,EAAAA,KAATD,KACR,GAA6BE,EAAAA,EAAAA,UAAQ,OAAEF,QAAF,IAAEA,OAAF,EAAEA,EAAMG,KAAKC,SAAS,UAA3D,eAAOC,EAAP,KAAeC,EAAf,KACA,GAA6BJ,EAAAA,EAAAA,WAAS,GAAtC,eAAOK,EAAP,KAAeC,EAAf,KAEMC,GAAgBC,EAAAA,EAAAA,UAAQ,iBAAO,CAEjCC,cAAkB,OAAJX,QAAI,IAAJA,OAAA,EAAAA,EAAMW,eAAgB,GACpCC,aAAiB,OAAJZ,QAAI,IAAJA,OAAA,EAAAA,EAAMY,cAAe,GAClCC,aAAiB,OAAJb,QAAI,IAAJA,OAAA,EAAAA,EAAMa,cAAe,GAClCC,eAAmB,OAAJd,QAAI,IAAJA,OAAA,EAAAA,EAAMc,gBAAiB,MAEtC,CAACd,IACL,GAAwFe,EAAAA,EAAAA,IAAQN,GAAxFO,EAAR,EAAQA,SAAUC,EAAlB,EAAkBA,MAAOC,EAAzB,EAAyBA,aAAzB,EAAuCC,SAAvC,EAAiDC,MAAjD,EAAwDC,UAAaC,aAoBrE,OALAC,EAAAA,EAAAA,YAAU,WACFvB,GACAiB,EAAMR,KACX,CAACT,EAAMS,EAAeQ,KAGrB,UAAC,IAAD,CAAMO,MAAK,eAAX,WACI,iBAAKC,UAAU,oCAAf,WACI,eAAGA,UAAU,2BAAb,8CACA,iBAAMC,SAAUR,GAtBX,SAACS,GACdnB,GAAW,IACXoB,EAAAA,EAAAA,IAAkBC,EAAAA,GAAAA,iBAAD,QAAC,UAAgCF,GAAjC,IAAsCxB,KAAK,WAAU2B,MAAK,SAAAC,GACvEvB,GAAW,GACO,MAAfuB,EAAIC,OACHC,EAAAA,GAAAA,QAAcF,EAAIG,SAGlBD,EAAAA,GAAAA,MAAYF,EAAIG,eAcwBT,UAAU,2DAAlD,UAEI,iBAAKA,UAAU,6BAAf,WAEI,gBAAKA,UAAU,SAAf,UACI,mBAAOA,UAAU,uBAAjB,WACI,iBAAMA,UAAU,kBAAhB,8BACA,kBAAOU,KAAK,WAAWV,UAAU,uBAAuBW,SAAU,WAAO9B,GAAYD,IAAYA,QAASA,UAGlH,iBAAKoB,UAAU,iCAAf,WAEI,iBAAKA,UAAU,SAAf,WACI,eAAGA,UAAU,yBAAb,6BACA,0BAAOA,UAAU,4CAA4CY,UAAWhC,EAASiC,UAAQ,GACjFtB,EAAS,qBAErB,iBAAKS,UAAU,SAAf,WACI,eAAGA,UAAU,yBAAb,6BACA,kCAAOA,UAAU,8CACTT,EAAS,gBADjB,IACmCqB,UAAWhC,SAElD,iBAAKoB,UAAU,SAAf,WACI,eAAGA,UAAU,yBAAb,iCACA,0BAAOA,UAAU,4CAA4Ca,UAAQ,EAAED,UAAWhC,GAC1EW,EAAS,sBAErB,iBAAKS,UAAU,SAAf,WACI,eAAGA,UAAU,yBAAb,+BACA,0BAAOA,UAAU,4CAA4Ca,UAAQ,EAAED,UAAWhC,GAC1EW,EAAS,0BAIzB,gBAAKS,UAAU,QAAf,UACI,mBAAQU,KAAK,SAASV,UAAS,oCAA+BlB,GAAW,WAAa8B,UAAWhC,EAAjG,4BAKfE,IAAW,SAAC,IAAD,CAAe2B,QAAQ","sources":["page/BillingInfo.js"],"sourcesContent":["import { useState } from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport useAuth from \"../hook/useAuth\";\r\nimport { useEffect, useMemo } from \"react\";\r\nimport toast from 'react-hot-toast';\r\nimport Page from '../component/Page'; \r\nimport { API_BILLING, SEND_POST_REQUEST, SEND_PUT_REQUEST } from \"../utils/API\";\r\nimport LoadingScreen from '../component/custom/LoadingScreen';\r\n\r\nexport default function BillingInfo() {\r\n    const { user } = useAuth();\r\n    const [checked,setChecked] = useState((user?.role.includes(\"admin\")));\r\n    const [loading,setLoading] = useState(false);\r\n  \r\n    const defaultValues = useMemo(() => ({\r\n      \r\n        invoiceAlias: user?.invoiceAlias || \"\",\r\n        payUsername: user?.payUsername || \"\",\r\n        payPassword: user?.payPassword || \"\",\r\n        payPassphrase: user?.payPassphrase || \"\",\r\n\r\n    }), [user]);\r\n    const { register, reset, handleSubmit, setValue, watch, formState: { isSubmitting } } = useForm(defaultValues);\r\n\r\n    const onSubmit = (data) => {\r\n        setLoading(true)\r\n        SEND_POST_REQUEST(API_BILLING.saveBillingInfo,{...data,role:\"admin\"}).then(res=>{\r\n            setLoading(false);\r\n            if(res.status === 200){\r\n                toast.success(res.message);\r\n            }\r\n            else{\r\n                toast.error(res.message);\r\n            }\r\n        });\r\n\r\n    }\r\n    useEffect(() => {\r\n        if (user)\r\n            reset(defaultValues);\r\n    }, [user, defaultValues, reset]);\r\n\r\n    return (\r\n        <Page title={`Billing Info`}>\r\n            <div className=\"container px-5 py-8 text-gray-700\">\r\n                <p className=\" font-bold text-2xl mb-5\"> {`Billing Info (admin only)`}</p>\r\n                <form onSubmit={handleSubmit(onSubmit)} className=\"grid md:grid-cols-2 gap-5 rounded-2xl shadow-lg bg-white\">\r\n\r\n                    <div className=\" md:col-span-2   p-6 gap-3\">\r\n\r\n                        <div className=\"w-full\">\r\n                            <label className=\"label cursor-pointer\">\r\n                                <span className=\"label-text mx-2\">work with admin</span>\r\n                                <input type=\"checkbox\" className=\"toggle toggle-accent\" onChange={() => {setChecked(!checked) }} checked={checked} />\r\n                            </label>\r\n                        </div>\r\n                        <div className=\"grid md:grid-cols-2 gap-5 mb-5\">\r\n                            \r\n                            <div className=\"w-full\">\r\n                                <p className=\"font-bold text-sm pl-2\"> {`Username`}</p>\r\n                                <input className=\"input h-10 border border-stone-300 w-full\" disabled={!checked} required\r\n                                    {...register(\"payUsername\")} />\r\n                            </div>\r\n                            <div className=\"w-full\">\r\n                                <p className=\"font-bold text-sm pl-2\"> {`Password`}</p>\r\n                                <input className=\"input h-10 border border-stone-300 w-full \"\r\n                                    {...register(\"payPassword\")}   disabled={!checked} />\r\n                            </div>\r\n                            <div className=\"w-full\">\r\n                                <p className=\"font-bold text-sm pl-2\"> {`InvoiceAlias`}</p>\r\n                                <input className=\"input h-10 border border-stone-300 w-full\" required  disabled={!checked} \r\n                                    {...register(\"invoiceAlias\")} />\r\n                            </div>\r\n                            <div className=\"w-full\">\r\n                                <p className=\"font-bold text-sm pl-2\"> {`Passphrase`}</p>\r\n                                <input className=\"input h-10 border border-stone-300 w-full\" required  disabled={!checked} \r\n                                    {...register(\"payPassphrase\")} />\r\n                            </div>\r\n\r\n                        </div>\r\n                        <div className=\"flex \">\r\n                            <button type=\"submit\" className={`btn btn-info px-5 ml-auto ${loading && 'loading'}`} disabled={!checked}  >Save</button>\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n            {loading && <LoadingScreen message=\"Saving..\"/>}\r\n        </Page>\r\n    )\r\n\r\n\r\n}\r\n"],"names":["BillingInfo","user","useAuth","useState","role","includes","checked","setChecked","loading","setLoading","defaultValues","useMemo","invoiceAlias","payUsername","payPassword","payPassphrase","useForm","register","reset","handleSubmit","setValue","watch","formState","isSubmitting","useEffect","title","className","onSubmit","data","SEND_POST_REQUEST","API_BILLING","then","res","status","toast","message","type","onChange","disabled","required"],"sourceRoot":""}