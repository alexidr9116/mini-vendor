{"version":3,"file":"static/js/98.41de9109.chunk.js","mappings":"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","sources":["page/admin/ProductList.js","utils/uFormatter.js"],"sourcesContent":["import { useEffect, useState } from 'react';\r\nimport { Icon } from '@iconify/react';\r\nimport toast from 'react-hot-toast';\r\nimport { IconButton } from '@mui/material';\r\nimport { ArrowBack, ArrowForward } from '@mui/icons-material';\r\nimport AlertModal from \"../../component/core/AlertModal\";\r\nimport Page from \"../../component/Page\";\r\nimport SearchInput from '../../component/core/SearchInput';\r\n\r\nimport { API_ADMIN, API_CLIENT, API_WAREHOUSE, ASSETS_URL, SEND_GET_REQUEST, SEND_POST_REQUEST } from '../../utils/API';\r\nimport { fPrice, fSimpleDate } from '../../utils/uFormatter';\r\nimport LoadingScreen from '../../component/custom/LoadingScreen';\r\n\r\nconst PER_COUNT = 10;\r\nexport default function ProductList() {\r\n    const [location,setLocation] = useState('');\r\n    const [checkModal,setCheckModal] = useState(false);\r\n    const [filtered, setFiltered] = useState([]);\r\n    const [products, setProducts] = useState([]);\r\n    const [warehouse, setWarehouse] = useState({});\r\n    const [searchFilter, setSearchFilter] = useState(\"\");\r\n    const [locationFilter, setLocationFilter] = useState(\"\");\r\n    const [currentPage, setCurrentPage] = useState(0);\r\n    const [selected, setSelected] = useState([]);\r\n    const [pageFiltered, setPageFiltered] = useState([]);\r\n    const [smsModal,setSmsModal] = useState(false);\r\n    const handleChangeSearch = (value) => {\r\n        setSearchFilter(value);\r\n    }\r\n    const handleNextPage = () => {\r\n        let current = currentPage;\r\n        if (current < (Math.ceil(filtered.length / PER_COUNT) - 1)) {\r\n            current++;\r\n\r\n            setPageFiltered(filtered.slice(current * PER_COUNT, Math.min((current + 1) * PER_COUNT, filtered.length)));\r\n            setCurrentPage(current);\r\n        }\r\n    }\r\n    const handlePrevPage = () => {\r\n        let current = currentPage;\r\n        if (current >= 1) {\r\n            current--;\r\n            setPageFiltered(filtered.slice(current * PER_COUNT, Math.min((current + 1) * PER_COUNT, filtered.length)));\r\n            setCurrentPage(current);\r\n        }\r\n    }\r\n    const applyFilter = () => {\r\n        let lFilter = locationFilter;\r\n        if (locationFilter === \"all\") {\r\n            lFilter = \"\";\r\n        }\r\n\r\n        const filter = (products.filter((product) => ((product.barcode.includes(searchFilter) || product.position.includes(searchFilter) || `${product.mobile}`.includes(searchFilter)) && product.position.includes(lFilter))));\r\n\r\n        setFiltered(filter);\r\n\r\n        setPageFiltered(filter.slice(currentPage * PER_COUNT, Math.min((currentPage + 1) * PER_COUNT, filter.length)));\r\n    }\r\n    const loadList = () => {\r\n        if (warehouse && warehouse._id)\r\n            SEND_GET_REQUEST(`${API_ADMIN.getProducts}${warehouse._id}`).then(res => {\r\n\r\n                if (res.status === 200 && res.data && res.data.data) {\r\n                    const data = res.data.data;\r\n                    setProducts(data)\r\n\r\n                }\r\n            })\r\n    }\r\n    const handleSelectOne = (e) => {\r\n        if (e.target.checked) {\r\n            if (!selected.includes(e.target.id)) {\r\n                let copy = selected.slice(0, selected.length);\r\n                copy.push(e.target.id);\r\n\r\n                setSelected(copy);\r\n            }\r\n        }\r\n        else {\r\n            \r\n            if (selected.includes(e.target.id)) {  \r\n                setSelected(selected.filter((id) => (id !== e.target.id)));\r\n            }\r\n        }\r\n    }\r\n    const handleChangeLocation = (e)=>{\r\n        setLocation(e.target.value);\r\n        setCheckModal(true);\r\n    }\r\n\r\n    const handleSelectAll = (e) => {\r\n        if (e.target.checked) {\r\n            setSelected(pageFiltered.map((product) => product._id));\r\n        }\r\n        else {\r\n            setSelected([]);\r\n        }\r\n    }\r\n\r\n    const handleAccept = ()=>{\r\n        \r\n        SEND_POST_REQUEST(`${API_ADMIN.changeLocation}`,{selected, position: location}).then(res=>{\r\n            setCheckModal(false);\r\n            if(res.status === 200){\r\n                loadList();\r\n                if(location === \"ub\" || location === \"coming\")\r\n                setSmsModal(true);\r\n            }\r\n            else{\r\n                toast.error(res.message);\r\n            }\r\n        }).catch(err=>{\r\n            setCheckModal(false);\r\n            toast.error(\"Server Error\");\r\n        });\r\n    }\r\n    useEffect(()=>{\r\n        if(smsModal && (location === \"coming\" || location === \"ub\")){\r\n            SEND_POST_REQUEST(`${API_ADMIN.sendSmsNotify}`,{selected, position: location}).then(res=>{\r\n                setSmsModal(false);\r\n             \r\n                if(res.status === 200){\r\n                    toast.success(res.message);\r\n                }\r\n                else{\r\n                    toast.error(res.message);\r\n                }\r\n            }).catch(err=>{\r\n                \r\n                setSmsModal(false);\r\n                toast.error(\"Server Error\");\r\n            }); \r\n        }\r\n    },[smsModal])\r\n    useEffect(() => {\r\n        SEND_GET_REQUEST(API_WAREHOUSE.getSelf).then(res => {\r\n            if (res.status === 200) {\r\n                setWarehouse(res.data.warehouse);\r\n            }\r\n            else {\r\n                toast.error(\"Please select your warehouse\");\r\n            }\r\n        })\r\n\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        applyFilter();\r\n    }, [products, locationFilter, searchFilter])\r\n    useEffect(() => {\r\n        if (warehouse && warehouse._id)\r\n            loadList();\r\n    }, [warehouse])\r\n    return (\r\n        <Page title='Product Management' className=\"flex w-full flex-col gap-4\">\r\n            <div className='flex w-full justify-between p-2'>\r\n                <select className='select select-bordered ' onChange={(e) => { (setLocationFilter(e.target.value)) }} value={locationFilter}>\r\n                    <option value='' disabled>Select Status..</option>\r\n                    <option value='all'>All</option>\r\n                    <option value='china'>China</option>\r\n                    <option value='coming'>Coming</option>\r\n                    <option value='ub'>Ulaanbaatar</option>\r\n                    <option value='delivery'>Delivery</option>\r\n                    <option value='completed'>Completed</option>\r\n                </select>\r\n                <SearchInput handleChangeSearch={handleChangeSearch} />\r\n            </div>\r\n            <div className='overflow-x-auto w-full'>\r\n                <table className='table w-full table-compact'>\r\n                    <thead>\r\n                        <tr>\r\n                            <th>\r\n                                <label>\r\n                                    {/* <input type=\"checkbox\" className=\"checkbox rounded-md checkbox-sm\" onChange={handleSelectAll} /> */}\r\n                                </label>\r\n                            </th>\r\n                            <th>Barcode</th>\r\n                            <th>Mobile</th>\r\n                            <th>Price</th>\r\n                            <th>Location</th>\r\n                            <th>RegTime</th>\r\n                            <th>UbTime</th>\r\n                            <th>FsTime</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {pageFiltered.length === 0 && <tr><td colSpan={8}><div className='text-lg text-center p-4'>No data display</div></td></tr>}\r\n                        {pageFiltered && pageFiltered.map((product, index) => (\r\n                            <tr key={index}>\r\n                                <td>\r\n                                    <label>\r\n                                        <input type=\"checkbox\" className=\"checkbox rounded-md checkbox-sm\" id={product._id} onChange={handleSelectOne}   />\r\n                                    </label>\r\n                                </td>\r\n                                <td>\r\n                                    {product.barcode}\r\n                                </td>\r\n                                <td>\r\n                                    {product.mobile}\r\n                                </td>\r\n                                <td>\r\n                                    {fPrice(product.price, '₮')}\r\n                                </td>\r\n                                <td>\r\n                                    {product.position}\r\n                                </td>\r\n                                <td>\r\n                                    {fSimpleDate(product.registeredAt)}\r\n                                </td>\r\n                                <td>\r\n                                    {product.arrivedUbAt ? fSimpleDate(product.arrivedUbAt) : ''}\r\n                                </td>\r\n                                <td>\r\n                                    {product.arrivedUser ? fSimpleDate(product.arrivedUser) : ''}\r\n                                </td>\r\n                            </tr>\r\n                        ))\r\n\r\n                        }\r\n                    </tbody>\r\n                </table>\r\n\r\n            </div>\r\n            <div className={\"flex justify-between w-full items-center mb-4 p-1  rounded-b-lg bg-stone-200 -mt-3\"}>\r\n                <div className='flex items-center gap-2'>\r\n                    {/* <input type=\"checkbox\" className='checkbox ml-1' onChange={handleSelectAll} /> */}\r\n                    {selected && selected.length >= 1 &&\r\n                        <select className='select select-bordered select-sm' onChange={handleChangeLocation} value = {location}>\r\n                            <option value=\"\" disabled >Select Option</option>\r\n                            <option value=\"coming\">Left from China</option>\r\n                            <option value=\"ub\">Arrived Ulaanbaatar</option>\r\n                            <option value=\"delivery\">Start Delivery</option>\r\n                            <option value=\"completed\">Arrived Client</option>\r\n\r\n                        </select>\r\n                    }\r\n                </div>\r\n                <div className='flex items-center  '>\r\n                    <label >{(currentPage + 1)} of {Math.ceil(filtered.length / PER_COUNT)}</label>\r\n                    <IconButton onClick={handlePrevPage} disabled={(currentPage === 0)} ><ArrowBack></ArrowBack></IconButton>\r\n                    <IconButton onClick={handleNextPage} disabled={(currentPage === (Math.ceil(filtered.length / PER_COUNT) - 1))} ><ArrowForward></ArrowForward></IconButton>\r\n                </div>\r\n\r\n            </div>\r\n            {checkModal && \r\n            <AlertModal description={`Do you want to change selected good's location to ${location}? If you will proceed this action, SMS will be send to clients`} title='Change Product`s Location, Really?' onAccept={handleAccept} onCancel = {()=>setCheckModal(false)} />\r\n            }\r\n            {smsModal && \r\n               <LoadingScreen message = \"Sending SMS Notification\" />\r\n            }\r\n        </Page>\r\n    )\r\n}","import numeral from 'numeral';\r\n\r\nexport function fNumber(number) {\r\n    return numeral(number).format(\"0,0.00a\").replace(\".00\", '');\r\n}\r\nexport function fPrice(number, currency) {\r\n    return `${fNumber(number)} ${currency}`;\r\n}\r\nexport function fRemain(current, period) {\r\n    const rm = period - current;\r\n    const d = Math.floor(rm / 3600 / 24 / 1000);\r\n    const h = Math.floor((rm - d * 3600 * 24 * 1000) / 3600 / 1000);\r\n    const m = Math.floor((rm - d * 3600 * 24 * 1000 - h * 3600 * 1000) / 60 / 1000);\r\n    const value = ((d > 0 ? (`${d}d `) : '') + (h > 0 ? (`${h}h `) : '') + (m > 0 ? (`${m}m `) : ''));\r\n    return {\r\n        text:`${value}`,\r\n        isRemain:rm>0,\r\n\r\n    }\r\n    \r\n}\r\nexport function fShortDate(number){\r\n    try{\r\n        const date = new Date(number).toUTCString();\r\n        return date.substring(0,date.length-3)\r\n    }\r\n    catch(err){\r\n        return \"\";\r\n    }\r\n}\r\nexport function fSimpleDate(number){\r\n    try{\r\n\r\n        const date = new Date(number).toUTCString();\r\n        return date.substring(0,date.length-12)\r\n    }\r\n    catch(err){\r\n        return \"\";\r\n    }\r\n}"],"names":["PER_COUNT","ProductList","useState","location","setLocation","checkModal","setCheckModal","filtered","setFiltered","products","setProducts","warehouse","setWarehouse","searchFilter","setSearchFilter","locationFilter","setLocationFilter","currentPage","setCurrentPage","selected","setSelected","pageFiltered","setPageFiltered","smsModal","setSmsModal","loadList","_id","SEND_GET_REQUEST","API_ADMIN","then","res","status","data","handleSelectOne","e","target","checked","includes","id","copy","slice","length","push","filter","useEffect","SEND_POST_REQUEST","position","toast","message","catch","err","API_WAREHOUSE","lFilter","product","barcode","mobile","Math","min","applyFilter","title","className","onChange","value","disabled","handleChangeSearch","colSpan","map","index","type","fPrice","price","fSimpleDate","registeredAt","arrivedUbAt","arrivedUser","ceil","onClick","current","description","onAccept","onCancel","fNumber","number","numeral","format","replace","currency","fShortDate","date","Date","toUTCString","substring"],"sourceRoot":""}