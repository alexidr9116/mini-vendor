{"version":3,"file":"static/js/407.4243c2d4.chunk.js","mappings":"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","sources":["page/admin/MachineEditModal.js","page/admin/MachineList.js"],"sourcesContent":["import { Icon } from \"@iconify/react\";\r\nimport { useEffect, useMemo, useState } from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport toast from \"react-hot-toast\";\r\nimport LoadingScreen from \"../../component/custom/LoadingScreen\";\r\nimport Image from \"../../component/Image\";\r\nimport AlertModal from '../../component/core/AlertModal';\r\nimport { API_ADMIN, API_CLIENT, ASSETS_URL, SEND_DELETE_REQUEST, SEND_GET_REQUEST, SEND_POST_REQUEST, SEND_PUT_REQUEST } from \"../../utils/API\";\r\n\r\nexport default function MachineEditModal({ onClose, machine, id = 'add' }) {\r\n\r\n    const [loading, setLoading] = useState(false);\r\n    const [removeModal, setRemoveModal] = useState(false);\r\n    const defaultValues = useMemo(() => ({\r\n        img: machine?.img || \"\",\r\n        vendorId: machine?.vendorId || \"\",\r\n        slotCount: machine?.slotCount || \"\",\r\n        title: machine?.title || \"\",\r\n        description: machine?.description || \"\",\r\n        deviceNumber:machine?.deviceNumber|| \"\",\r\n        type: machine?.type || 'ble',\r\n        \r\n    }), [machine]);\r\n\r\n\r\n    const { register, handleSubmit, setValue, watch, reset, formState: { errors, isSubmitting } } = useForm({ defaultValues });\r\n    const img = watch('img');\r\n    const deviceType = watch('type');\r\n    const imageChange = (e) => {\r\n        if (e.target.files && e.target.files.length > 0) {\r\n            setValue('img', e.target.files[0]);\r\n        }\r\n    }\r\n    const handleRemoveOk = () => {\r\n        SEND_DELETE_REQUEST(`${API_ADMIN.deleteMiniVendor}`, id).then(res => {\r\n            if (res.status === 200) {\r\n                toast.success(res.message)\r\n                setRemoveModal(false)\r\n                onClose();\r\n            }\r\n            else {\r\n                toast.error(res.message)\r\n            }\r\n        })\r\n    }\r\n    const handleRemove = () => {\r\n        setRemoveModal(true);\r\n    }\r\n    const onSubmit = (data) => {\r\n        console.log(data);\r\n        setLoading(true);\r\n        let iData = new FormData();\r\n        if (typeof img === \"object\") {\r\n\r\n            iData.append(\"img\", img);\r\n            iData.append(\"vendorId\", data.vendorId);\r\n            iData.append(\"slotCount\", data.slotCount);\r\n            iData.append(\"title\", data.title);\r\n            iData.append(\"type\", data.type);\r\n            iData.append(\"description\", data.description);\r\n            iData.append(\"id\", id);\r\n            iData.append('deviceNumber',data.deviceNumber);\r\n            SEND_PUT_REQUEST(API_ADMIN.addMiniVendor, iData).then(res => {\r\n                setLoading(false);\r\n                if (res.status === 200) {\r\n                    toast.success(res.message)\r\n                    onClose()\r\n                }\r\n                else {\r\n                    toast.error(res.message)\r\n                }\r\n\r\n            }).catch(err => {\r\n                toast.error(\"Internal Server Error\")\r\n            });;\r\n        }\r\n        else {\r\n\r\n            if (id === \"add\") {\r\n                toast.error(\"Choose Image File\");\r\n                setLoading(false);\r\n                return;\r\n            }\r\n            else {\r\n                SEND_PUT_REQUEST(API_ADMIN.editMiniVendor, { ...data, id }).then(res => {\r\n                    setLoading(false);\r\n                    if (res.status === 200) {\r\n                        toast.success(res.message)\r\n                        onClose()\r\n                    }\r\n                    else {\r\n                        toast.error(res.message)\r\n                    }\r\n\r\n                }).catch(err => {\r\n                    setLoading(false);\r\n                    console.log(err);\r\n                    toast.error(\"Server Error\")\r\n                });\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (id !== \"add\" && machine !== null) {\r\n            reset(defaultValues)\r\n            setValue('img', `${ASSETS_URL.root}${machine.img}`);\r\n        }\r\n    }, [id, machine, reset, defaultValues, setValue])\r\n\r\n    return (\r\n        <div className={`modal modal-open bg-black/0 `}>\r\n            <div className=\" fixed inset-0 bg-black/80\" onClick={onClose} />\r\n            <div className='z-50 bg-white rounded-xl py-5 px-3'>\r\n                <p className=\"text-center font-bold text-xl mb-3\">{id === \"add\" ? `Add New Vendor Machine` : `Edit Vendor Machine`} </p>\r\n                <form className=\"flex flex-col items-center gap-3 p-2\"\r\n                    onSubmit={handleSubmit(onSubmit)}\r\n                >\r\n                    <div className='grid grid-cols-2 w-full'>\r\n                        <div>\r\n                            <div className=\"w-full \">\r\n                                <p className=\"\">VendorID*</p>\r\n                                <input className=\"input h-10 border border-stone-300 w-full\" required {...register(\"vendorId\")} />\r\n                            </div>\r\n\r\n                            <div className=\"w-full\">\r\n                                <p className=\"\">Slot Count*</p>\r\n                                <input type='number' className=\"input h-10 border border-stone-300 w-full\" required  {...register(\"slotCount\")} />\r\n                            </div>\r\n                            <div className=\"w-full \">\r\n                                <p className=\"\">VendorType*</p>\r\n                                <select className=\"select select-sm h-10 select-info w-full mb-2\" {...register(\"type\")} >\r\n                                    <option value='ble'  >Bluetooth</option>\r\n                                    <option value='sms'  >SMS</option>\r\n                                    <option value='4g'  >4G</option>\r\n                                    <option value='wifi'  >Wi-fi</option>\r\n\r\n                                </select>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"card p-3  gap-5  h-full\">\r\n                            {/* avatar */}\r\n                            <div className=\"mx-auto relative mt-4\">\r\n\r\n                                <Image className=\"w-36 h-36 rounded-lg outline-dashed outline-stone-300 outline-offset-4 outline-1\"\r\n                                    src={typeof img === 'string' ? img : (img ? URL.createObjectURL(img) : '')}\r\n                                />\r\n\r\n                                <input hidden id=\"img\" type=\"file\" accept=\"image/*\" onChange={imageChange} />\r\n                                <label htmlFor=\"img\" className=\"rounded-lg border bg-gray-50 w-9 h-9 cursor-pointer flex absolute bottom-0 right-0\">\r\n                                    <Icon icon={'fa:pencil'} width={20} className=\"m-auto text-stone-500\" />\r\n                                </label>\r\n                            </div>\r\n\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"w-full \">\r\n                        <p className=\"\">Vendor Title</p>\r\n                        <input className=\"input h-10 border border-stone-300 w-full\" required  {...register(\"title\")} />\r\n                    </div>\r\n                    {deviceType === 'sms' &&\r\n                        <div className=\"w-full \">\r\n                            <p className=\"\">Device Number</p>\r\n                            <input className=\"input h-10 border border-stone-300 w-full\" required  {...register(\"deviceNumber\")} />\r\n                        </div>\r\n                    }\r\n\r\n                    <div className=\"w-full\">\r\n                        <p className=\"\">Vendor Description</p>\r\n                        <textarea className=\"textarea textarea-bordered  w-full \" placeholder=\"Description\" required  {...register(\"description\")} />\r\n                    </div>\r\n                    <div className=\"w-full grid grid-cols-3 gap-2\">\r\n                        <button className={`btn btn-sm btn-info ${isSubmitting && 'loading'}`} type=\"submit\">\r\n                            Save\r\n                        </button>\r\n                        <button className={`btn  btn-sm btn-info `} onClick={handleRemove} type='button' disabled={(id === 'add')}>\r\n                            Delete\r\n                        </button>\r\n                        <button className={`btn  btn-sm btn-info  `} onClick={onClose}>\r\n                            Cancel\r\n                        </button>\r\n                    </div>\r\n\r\n                </form>\r\n            </div>\r\n            {removeModal && <AlertModal onCancel={() => setRemoveModal(false)} onAccept={handleRemoveOk} title=\"Do you want to remove, Sure?\" description=\"If you have proceed this operation, the data will be removed from  database\" />}\r\n            {loading && <LoadingScreen message='Saving' />}\r\n        </div>\r\n    )\r\n}","import { useEffect, useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { Icon } from '@iconify/react';\r\nimport Page from \"../../component/Page\";\r\nimport SearchInput from '../../component/core/SearchInput';\r\nimport Pagination from '../../component/core/Pagination';\r\nimport EditModal from './MachineEditModal';\r\nimport { API_ADMIN, ASSETS_URL, SEND_GET_REQUEST, SEND_POST_REQUEST } from '../../utils/API';\r\nimport Image from '../../component/Image';\r\nimport toast from 'react-hot-toast';\r\nimport AlertModal from '../../component/core/AlertModal';\r\n\r\nexport default function MachineList() {\r\n    const navigate = useNavigate();\r\n    const [owner,setOwner] = useState({});\r\n    const [promptModal,setPromptModal] = useState(false);\r\n    const [modal, setModal] = useState(false);\r\n    const [id, setId] = useState(\"add\");\r\n    const [adminList, setAdminList] = useState([]);\r\n    const [vendors, setVendors] = useState([]);\r\n    const [current, setCurrent] = useState(null);\r\n    const [filtered, setFiltered] = useState([]);\r\n    const handleChangeSearch = (value) => {\r\n        setFiltered(vendors.filter((vendor) => (vendor.title.includes(value) || vendor.type.includes(value) || vendor.description.includes(value))));\r\n\r\n    }\r\n    const handleChangePage = () => {\r\n    }\r\n    const handleClose = () => {\r\n        setModal(false)\r\n        loadList();\r\n    }\r\n    const handleProduct = (vendorId) => {\r\n        navigate(`/admin/get-products/${vendorId}`, { replace: true });\r\n    }\r\n    const handleEdit = (id, c) => {\r\n        setId(id);\r\n        setCurrent(c);\r\n        setModal(true);\r\n    }\r\n    const loadList = () => {\r\n        SEND_GET_REQUEST(API_ADMIN.getMiniVendors).then(res => {\r\n            if (res.status === 200 && res.data && res.data.data) {\r\n                const data = res.data.data;\r\n                setVendors(data);\r\n                setFiltered(data)\r\n            }\r\n        })\r\n\r\n    }\r\n    const handleChange = (value,item)=>{\r\n        \r\n        setOwner(value);\r\n        setCurrent(item);\r\n        setPromptModal(true);\r\n    }\r\n    const handleChangeOk = ()=>{\r\n        SEND_POST_REQUEST(API_ADMIN.changeVendorOwner,{id:current._id, owner}).then((res)=>{\r\n            setPromptModal(false);\r\n            if(res.status === 200){\r\n                setVendors((prev) => (prev.map((vendor, index) => {\r\n                    if (vendor._id === current._id) {\r\n                        vendor.owner = owner;\r\n                    }\r\n                    return vendor;\r\n                  })));\r\n                toast.success(res.message);\r\n            }\r\n            else{\r\n                toast.error(res.message);\r\n            }\r\n        })\r\n    }\r\n    useEffect(() => {\r\n        SEND_POST_REQUEST(API_ADMIN.admins, {}).then(res => {\r\n            if (res.status === 200) {\r\n                setAdminList(res.data.users);\r\n                loadList();\r\n            }\r\n            else {\r\n\r\n            }\r\n        })\r\n\r\n    }, [])\r\n\r\n\r\n    return (\r\n        <Page title='Machine Management'>\r\n            <div className=\"flex w-full gap-2 flex-col \">\r\n                <div className=\"flex w-full justify-center items-center\">\r\n                    <SearchInput handleChangeSearch={handleChangeSearch} />\r\n                    <button className=\"btn btn-outline btn-sm btn-circle btn-error ml-2\" onClick={() => {\r\n                        setCurrent(null);\r\n                        setModal(true);\r\n                    }}>\r\n                        <Icon icon=\"fa:plus\" />\r\n                    </button>\r\n                </div>\r\n                <div className='grid grid-cols-1 gap-2 px-4 sm:grid-cols-2 lg:grid-cols-3'>\r\n                    {filtered && filtered.map((vendor, index) => (\r\n\r\n                        <div className=\"card card-side bg-base-100 shadow-xl p-3\" key={index}>\r\n                            <figure><Image className=\"h-[200px] w-[130px]\" src={`${ASSETS_URL.root}${vendor.img}`} alt=\"Vendor\" /></figure>\r\n                            <div className=\"card-body gap-0 p-3\">\r\n                                <h2 className=\"card-title\">{vendor.title} <label className='badge badge-outline badge-info'>\r\n                                    {vendor.type}\r\n                                </label></h2>\r\n\r\n                                <p>{vendor.description}.<br/>\r\n                                \r\n                                <select className=\"select select-info select-sm w-full max-w-xs\" value = {vendor.owner} onChange = {(e)=>handleChange(e.target.value,vendor)}>\r\n                                    <option disabled >Select Owner</option>\r\n                                    {adminList.map((admin, index) => (\r\n                                        <option key={index} value={admin._id}>{admin.firstName} {admin.lastName} - {admin.mobile}</option>\r\n                                    ))}\r\n                                </select>\r\n                                </p>\r\n                                <div className=\"card-actions justify-end\">\r\n                                    <button className=\"btn btn-info  btn-sm\" onClick={() => handleProduct(`${vendor.vendorId}`)}>Products</button>\r\n                                    <button className=\"btn btn-error btn-sm\" onClick={() => handleEdit(`${vendor._id}`, vendor)}>Edit</button>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                    ))}\r\n                </div>\r\n                {/* <Pagination totalCount={1} handleChangePage={handleChangePage} perPageCount={10} /> */}\r\n            </div>\r\n            {modal &&\r\n                <EditModal onClose={handleClose} id={id} machine={current} />\r\n            }\r\n            \r\n            {promptModal &&\r\n                <AlertModal onAccept={handleChangeOk} title={\"Do you want to change this vendor's owner, really?\"} description={\"If you proceed this operation, the vendor's owner will be change. \"} \r\n                onCancel = {()=>setPromptModal(false)} />\r\n            }\r\n        </Page>\r\n    )\r\n}"],"names":["MachineEditModal","onClose","machine","id","useState","loading","setLoading","removeModal","setRemoveModal","defaultValues","useMemo","img","vendorId","slotCount","title","description","deviceNumber","type","useForm","register","handleSubmit","setValue","watch","reset","formState","isSubmitting","errors","deviceType","useEffect","ASSETS_URL","className","onClick","onSubmit","data","console","log","iData","FormData","append","SEND_PUT_REQUEST","API_ADMIN","then","res","status","toast","message","catch","err","required","value","Image","src","URL","createObjectURL","hidden","accept","onChange","e","target","files","length","htmlFor","icon","width","placeholder","disabled","AlertModal","onCancel","onAccept","SEND_DELETE_REQUEST","LoadingScreen","MachineList","navigate","useNavigate","owner","setOwner","promptModal","setPromptModal","modal","setModal","setId","adminList","setAdminList","vendors","setVendors","current","setCurrent","filtered","setFiltered","loadList","SEND_GET_REQUEST","SEND_POST_REQUEST","users","Page","SearchInput","handleChangeSearch","filter","vendor","includes","map","index","alt","item","admin","_id","firstName","lastName","mobile","replace","c","handleEdit","prev"],"sourceRoot":""}